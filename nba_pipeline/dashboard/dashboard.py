import flet as ft


def main(page: ft.Page):
    page.title = "NBA Dashboard"
    page.theme_mode = ft.ThemeMode.DARK
    page.padding = 20
    page.scroll = ft.ScrollMode.AUTO

    # Onglets principaux
    def on_tab_change(e):
        current_tab = e.control.selected_index
        if current_tab == 0:
            content_container.controls = [overview_tab()]
        elif current_tab == 1:
            content_container.controls = [kpis_tab()]
        elif current_tab == 2:
            content_container.controls = [draft_predictions_tab()]
        elif current_tab == 3:
            content_container.controls = [playoff_tab()]
        elif current_tab == 4:
            content_container.controls = [lineup_tab()]
        page.update()

    tabs = ft.Tabs(
        selected_index=0,
        on_change=on_tab_change,
        tabs=[
            ft.Tab(text="Accueil"),
            ft.Tab(text="Statistiques et KPIs"),
            ft.Tab(text="Draft"),
            ft.Tab(text="Playoffs"),
            ft.Tab(text="Lineup"),
        ]
    )

    content_container = ft.Column(expand=True, controls=[])

    # Pages
    def overview_tab():
        return ft.Container(
            alignment=ft.alignment.center,
            padding=ft.Padding(160, 50, 160, 50),
            content=ft.Column([
                ft.Container(
                    bgcolor=ft.Colors.BLUE_GREY_100,
                    clip_behavior=ft.ClipBehavior.HARD_EDGE,
                    content=ft.Image(
                        src="https://i.pinimg.com/736x/90/c1/c1/90c1c12aabaeab3130ebd2026af10ebf.jpg",
                        expand=True,
                        width=float('inf'),
                        height=500,
                        fit=ft.ImageFit.COVER
                    ),
                    border_radius=15,
                    alignment=ft.alignment.center,
                    margin=ft.margin.only(bottom=30)
                ),
                ft.Text("üèÄ NBA DATA PIPELINE DASHBOARD", size=36, weight=ft.FontWeight.BOLD),
                ft.Divider(),
                ft.Text("Bienvenue sur ce tableau de bord interactif bas√© sur un projet de pipeline NBA complet.",
                        size=18, text_align=ft.TextAlign.CENTER),
                ft.Text(
                    "Ce projet combine l'orchestration de donn√©es, le machine learning, l'analyse statistique et la visualisation avanc√©e pour fournir une plateforme d'analyse de la NBA compl√®te.",
                    size=16),
                ft.Container(height=20),
                ft.Text("Objectifs du projet :", size=22, weight=ft.FontWeight.BOLD),
                ft.Text("- Automatiser l'extraction des donn√©es NBA (matchs, joueurs, saisons, statistiques, drafts)."),
                ft.Text("- Nettoyer et enrichir les donn√©es avec des KPIs utiles √† l‚Äôanalyse d√©cisionnelle."),
                ft.Text(
                    "- Impl√©menter des mod√®les de machine learning : flop draft, gagnant des playoffs, lineup optimal."),
                ft.Text("- Visualiser dynamiquement les donn√©es et recommandations via une interface moderne."),
                ft.Container(height=20),
                ft.Text("Technologies utilis√©es :", size=22, weight=ft.FontWeight.BOLD),
                ft.Text("- Dagster pour l‚Äôorchestration du pipeline (assets, jobs, schedules, sensors)."),
                ft.Text("- Polars pour le traitement des donn√©es √† haute performance."),
                ft.Text("- PostgreSQL pour le stockage relationnel.", size=16),
                ft.Text("- XGBoost, RandomForest pour les mod√®les de ML pr√©dictifs."),
                ft.Text("- Flet pour une visualisation moderne et dynamique des r√©sultats."),
                ft.Text("- GitHub Actions pour le CI/CD et les tests automatis√©s."),
                ft.Container(height=20),
                ft.Text("√Ä explorer dans le tableau de bord :", size=22, weight=ft.FontWeight.BOLD),
                ft.Text("‚Ä¢ Statistiques & KPIs : performances joueurs par √©quipe/saison."),
                ft.Text("‚Ä¢ Draft : pr√©diction des flops via ML et analyse des drafts pass√©s."),
                ft.Text("‚Ä¢ Playoffs : simulation des gagnants des s√©ries √† venir."),
                ft.Text("‚Ä¢ Lineup : recommandation des meilleurs alignements par adversaire."),
                ft.Text("‚Ä¢ Exploration libre : acc√®s brut aux donn√©es filtrables par utilisateur."),
                ft.Container(height=20),
                ft.Text("üìÖ Derni√®re mise √† jour du projet : Avril 2025", italic=True, size=14,
                        text_align=ft.TextAlign.CENTER),
                ft.Text("Auteur : Sereina YOPA ‚Ä¢ Projet scolaire ‚Äì Soutenance technique", italic=True, size=14,
                        text_align=ft.TextAlign.CENTER)
            ])
        )

    def kpis_tab():
        return ft.Container(
            padding=ft.Padding(160, 50, 160, 50),
            content=ft.Column([
                ft.Text("üèÄ Statistiques et KPIs des Joueurs", size=36, weight=ft.FontWeight.BOLD),
                ft.Divider(),

                # Section 1 : Filtres et card joueur
                ft.Row([
                    ft.Column([
                        ft.Text("Filtres", size=20, weight=ft.FontWeight.BOLD),
                        ft.Dropdown(label="Saison", options=[], width=200, border_color=ft.Colors.WHITE),
                        ft.Dropdown(label="√âquipe", options=[], width=200, border_color=ft.Colors.WHITE),
                        ft.Dropdown(label="Joueur", options=[], width=200, border_color=ft.Colors.WHITE)
                    ], spacing=10),
                    ft.Container(width=30),
                    ft.Container(
                        expand=True,
                        border_radius=10,
                        padding=15,
                        bgcolor=ft.Colors.with_opacity(0.05, ft.Colors.WHITE),
                        content=ft.Row([
                            ft.Container(width=40),
                            ft.Text("Nom du joueur", size=26, weight=ft.FontWeight.BOLD),
                            ft.Container(width=40),
                            ft.Column([
                                ft.Text("‚Ä¢ Points par match : ..."),
                                ft.Text("‚Ä¢ Assists : ..."),
                                ft.Text("‚Ä¢ Rebounds : ..."),
                                ft.Text("‚Ä¢ Efficiency : ..."),
                                ft.Text("‚Ä¢ FG% : ..."),
                                ft.Text("‚Ä¢ Minutes : ...")
                            ])
                        ])
                    )
                ]),
                ft.Divider(),
                # Section 2 : Line chart (placeholder)
                ft.Text("üìà √âvolution de la saison", size=20, weight=ft.FontWeight.BOLD),
                ft.Container(
                    height=300,
                    bgcolor=ft.Colors.with_opacity(0.03, ft.Colors.WHITE),
                    border_radius=8,
                    alignment=ft.alignment.center,
                    content=ft.Text("[Graphique ligne points + efficacit√© √† int√©grer]", italic=True)
                ),

                ft.Divider(),
                # Section 3 : Comparaison de joueurs avec radar chart
                ft.Text("üß† Comparateur de Joueurs", size=20, weight=ft.FontWeight.BOLD),
                ft.Row([
                    ft.Dropdown(label="Joueur 1", options=[], width=200, border_color=ft.Colors.WHITE),
                    ft.Dropdown(label="Saison", options=[], width=200, border_color=ft.Colors.WHITE),
                    ft.Dropdown(label="Joueur 2", options=[], width=200, border_color=ft.Colors.WHITE)
                ], spacing=20),
                ft.Row([
                    ft.Container(
                        expand=True,
                        content=ft.Text("Card Joueur 1", text_align=ft.TextAlign.CENTER)
                    ),
                    ft.Container(
                        expand=True,
                        content=ft.Text("Radar Chart", text_align=ft.TextAlign.CENTER)
                    ),
                    ft.Container(
                        expand=True,
                        content=ft.Text("Card Joueur 2", text_align=ft.TextAlign.CENTER)
                    )
                ], spacing=20),

                ft.Divider(),
                # Section 4 : Scatter plot √©quipes
                ft.Text("üìâ Performance des √âquipes", size=20, weight=ft.FontWeight.BOLD),
                ft.Row([
                    ft.Dropdown(label="Saison", options=[], width=200, border_color=ft.Colors.WHITE),
                    ft.Dropdown(label="Param√®tre", options=[], width=200, border_color=ft.Colors.WHITE)
                ], spacing=20),
                ft.Container(
                    height=300,
                    bgcolor=ft.Colors.with_opacity(0.03, ft.Colors.WHITE),
                    border_radius=8,
                    alignment=ft.alignment.center,
                    content=ft.Text("[Scatter plot √† int√©grer]", italic=True)
                ),

                ft.Divider(),
                # Section 5 : Visualisation des matchs
                ft.Text("üèüÔ∏è Matchs sp√©cifiques", size=20, weight=ft.FontWeight.BOLD),
                ft.Row([
                    ft.Dropdown(label="Type de match",
                                options=[ft.dropdown.Option("Saison r√©guli√®re"), ft.dropdown.Option("Playoffs")],
                                width=200,
                                border_color=ft.Colors.WHITE),
                    ft.Dropdown(label="√âquipe √† domicile", options=[], width=200, border_color=ft.Colors.WHITE),
                    ft.Dropdown(label="√âquipe √† l'ext√©rieur", options=[], width=200, border_color=ft.Colors.WHITE),
                    ft.Dropdown(label="Date", options=[], width=200, border_color=ft.Colors.WHITE)
                ], spacing=20),
                ft.Container(
                    height=300,
                    bgcolor=ft.Colors.with_opacity(0.03, ft.Colors.WHITE),
                    border_radius=8,
                    alignment=ft.alignment.center,
                    content=ft.Text("[Graphique par quarts √† int√©grer]", italic=True)
                )
            ], spacing = 40)
        )

    def draft_predictions_tab():
        sheet_ref = ft.Ref[ft.BottomSheet]()

        def show_modal(player_name, pick, team, prob_flop, is_flop):
            color = ft.Colors.RED_400 if is_flop else ft.Colors.GREEN_400
            status = "Flop pr√©dit" if is_flop else "Bon choix"
            sheet_ref.current.content = ft.Container(
                padding=20,
                content=ft.Column([
                    ft.Text(player_name, size=24, weight=ft.FontWeight.BOLD),
                    ft.Text(f"üéØ Pick #{pick} - {team}"),
                    ft.Text(f"üìâ Probabilit√© de flop : {prob_flop * 100:.2f} %"),
                    ft.Text(f"üß† Statut : {status}", color=color),
                ])
            )
            sheet_ref.current.open = True
            sheet_ref.current.update()

        player_rows = [
            ft.DataRow(
                cells=[
                    ft.DataCell(ft.Text("Victor Wembanyama"),
                                on_tap=lambda e: show_modal("Victor Wembanyama", 1, "Spurs", 0.12, False)),
                    ft.DataCell(ft.Text("1")),
                    ft.DataCell(ft.Text("Spurs")),
                    ft.DataCell(ft.Text("12%")),
                    ft.DataCell(ft.Text("‚ùå"))
                ]
            ),
            ft.DataRow(
                cells=[
                    ft.DataCell(ft.Text("John Doe"), on_tap=lambda e: show_modal("John Doe", 9, "Knicks", 0.78, True)),
                    ft.DataCell(ft.Text("9")),
                    ft.DataCell(ft.Text("Knicks")),
                    ft.DataCell(ft.Text("78%")),
                    ft.DataCell(ft.Text("‚úÖ"))
                ]
            )
        ]

        return ft.Container(
            padding=ft.Padding(160, 50, 160, 50),
            content=ft.Column([
            ft.Text("üîÆ Pr√©dictions de Flops √† la Draft", size=28, weight=ft.FontWeight.BOLD),
            ft.Divider(),
            ft.Row([
                ft.Dropdown(label="Saison", options=[], width=200, border_color=ft.Colors.WHITE),
                ft.Switch(label="Afficher uniquement les flops", value=False)
            ], spacing=20),
            ft.Container(height=20),
            ft.DataTable(
                columns=[
                    ft.DataColumn(label=ft.Text("Joueur")),
                    ft.DataColumn(label=ft.Text("Pick")),
                    ft.DataColumn(label=ft.Text("√âquipe")),
                    ft.DataColumn(label=ft.Text("Prob. Flop")),
                    ft.DataColumn(label=ft.Text("Est Flop ?")),
                ],
                rows=player_rows
            ),
            ft.BottomSheet(ref=sheet_ref, content=ft.Container(), open=False)
        ])
        )

    def playoff_tab():
        return ft.Container(
            padding=ft.Padding(50, 0, 50, 0),
            content=ft.Column([
                ft.Text("üèÜ Pr√©dictions Playoffs NBA", size=28, weight=ft.FontWeight.BOLD),
                ft.Divider(),

                # üéØ Filtres
                ft.Row([
                    ft.Dropdown(label="Saison", options=[], width=200, border_color=ft.Colors.WHITE),
                    ft.Dropdown(label="Conf√©rence", options=[
                        ft.dropdown.Option("Est"),
                        ft.dropdown.Option("Ouest")
                    ], width=200, border_color=ft.Colors.WHITE),
                    ft.Switch(label="Afficher uniquement les favoris", value=False)
                ], spacing=20),

                ft.Container(height=20),

                # üìã Tableau des pr√©dictions
                ft.Text("üìã R√©sultats Simul√©s", size=20, weight=ft.FontWeight.BOLD),
                ft.Container(
                    height=300,
                    bgcolor=ft.Colors.with_opacity(0.03, ft.Colors.WHITE),
                    border_radius=8,
                    alignment=ft.alignment.center,
                    content=ft.Text("[Tableau avec probabilit√©s par √©quipe √† int√©grer ici]", italic=True)
                ),

                ft.Container(height=30),

                # üîÆ √âquipe favorite
                ft.Text("üîÆ √âquipe favorite pr√©dite", size=20, weight=ft.FontWeight.BOLD),
                ft.Container(
                    height=200,
                    bgcolor=ft.Colors.with_opacity(0.03, ft.Colors.WHITE),
                    border_radius=8,
                    padding=20,
                    content=ft.Column([
                        ft.Text("[Nom de l‚Äô√©quipe]", size=22, weight=ft.FontWeight.BOLD),
                        ft.Text("Probabilit√© de victoire : ..."),
                        ft.ProgressBar(width=400, value=0.72)
                    ])
                ),

                ft.Container(height=30),

                # üß† Focus √©quipe modale
                ft.Text("üß† Focus sur une √©quipe", size=20, weight=ft.FontWeight.BOLD),
                ft.Container(
                    height=200,
                    bgcolor=ft.Colors.with_opacity(0.04, ft.Colors.WHITE),
                    border_radius=8,
                    padding=20,
                    alignment=ft.alignment.center,
                    content=ft.Text("[Modal au clic d‚Äôune √©quipe]", italic=True)
                )
            ])
        )

    def lineup_tab():
        return ft.Container(
            padding=ft.Padding(50, 0, 50, 0),
            content=ft.Column([
                ft.Text("üß† Recommandation de Lineup Optimal", size=28, weight=ft.FontWeight.BOLD),
                ft.Divider(),

                # üîπ Filtres tactiques
                ft.Row([
                    ft.Dropdown(label="Saison", options=[], width=200, border_color=ft.Colors.WHITE),
                    ft.Dropdown(label="√âquipe √† optimiser", options=[], width=250, border_color=ft.Colors.WHITE),
                    ft.Dropdown(label="√âquipe adverse", options=[], width=250, border_color=ft.Colors.WHITE)
                ], spacing=20),

                ft.Container(height=30),

                # üß± Lineup recommand√©
                ft.Text("üß± Lineup conseill√© contre l'adversaire", size=20, weight=ft.FontWeight.BOLD),
                ft.Container(
                    bgcolor=ft.Colors.with_opacity(0.03, ft.Colors.WHITE),
                    border_radius=10,
                    padding=20,
                    content=ft.Column([
                        ft.Text("üèÄ PG: ..."),
                        ft.Text("üèÄ SG: ..."),
                        ft.Text("üèÄ SF: ..."),
                        ft.Text("üèÄ PF: ..."),
                        ft.Text("üèÄ C: ..."),
                    ])
                ),

                ft.Container(height=30),

                # üìä Comparaison radar / bar
                ft.Text("üìä Comparaison des forces moyennes", size=20, weight=ft.FontWeight.BOLD),
                ft.Container(
                    height=300,
                    bgcolor=ft.Colors.with_opacity(0.03, ft.Colors.WHITE),
                    border_radius=8,
                    alignment=ft.alignment.center,
                    content=ft.Text("[Radar Chart ou Bar Chart √† int√©grer ici]", italic=True)
                ),

                ft.Container(height=30),

                # üí¨ Analyse compl√©mentaire
                ft.Text("üí¨ Analyse strat√©gique de l‚Äôalignement", size=20, weight=ft.FontWeight.BOLD),
                ft.Container(
                    bgcolor=ft.Colors.with_opacity(0.02, ft.Colors.WHITE),
                    border_radius=8,
                    padding=20,
                    content=ft.Text("[R√©sum√© tactique automatique √† int√©grer]", italic=True)
                )
            ])
        )

    # Initialisation
    content_container.controls = [overview_tab()]
    page.add(tabs, content_container)

ft.app(target=main)
